name: Build Test
on: 
  push: 
    branches:
      - main
    tags:
      - "**"

env:
  CARGO_TERM_COLOR: always
  BUILD_TARGET: x86_64-unknown-linux-musl

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup env
        run: sudo apt-get install -y protobuf-compiler
      - name: Build
        run: cargo build --verbose
      # - name: Test
      #   run: cargo test --verbose

      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      
      - name: Build Release
        run: |
              sudo apt-get install -y protobuf-compiler
              cargo build -r
      
      # - uses: actions/setup-python@v4
      #   id: cp310
      #   with:
      #     python-version: '3.10'
      # - run: pipx run --python '${{ steps.cp310.outputs.python-path }}' nox --version

      # - name: Rust MUSL Builder
      #   uses: gmiam/rust-musl-action@master
      #   env:
      #     RUSTFLAGS: "-C target-feature=-crt-static"
      #     # PYO3_PYTHON:  ${{ steps.cp310.outputs.python-path }}
      #   with:
      #     args: cargo build --target $BUILD_TARGET --release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          tag_name: v${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/data_preprocesser
          asset_name: data_preprocesser
          asset_content_type: application/octet-stream

      # - name: Upload MUSL Release Asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./target/x86_64-unknown-linux-musl/release/data_preprocesser
      #     asset_name: data_preprocesser
      #     asset_content_type: application/octet-stream

      # - name: copy file via ssh password
      #   uses: appleboy/scp-action@v0.1.4
      #   with:
      #     host: IP or domain name
      #     username: root
      #     password: password
      #     port: 22
      #     source: ./target/x86_64-unknown-linux-musl/release/data_preprocesser
      #     target: /root/data_preprocesser
    